#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DigitalTickets")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertDistrict(District instance);
    partial void UpdateDistrict(District instance);
    partial void DeleteDistrict(District instance);
    partial void InsertEntRole(EntRole instance);
    partial void UpdateEntRole(EntRole instance);
    partial void DeleteEntRole(EntRole instance);
    partial void InsertEntRoleCapability(EntRoleCapability instance);
    partial void UpdateEntRoleCapability(EntRoleCapability instance);
    partial void DeleteEntRoleCapability(EntRoleCapability instance);
    partial void InsertEntRoleUserAccount(EntRoleUserAccount instance);
    partial void UpdateEntRoleUserAccount(EntRoleUserAccount instance);
    partial void DeleteEntRoleUserAccount(EntRoleUserAccount instance);
    partial void InsertEntUserAccount(EntUserAccount instance);
    partial void UpdateEntUserAccount(EntUserAccount instance);
    partial void DeleteEntUserAccount(EntUserAccount instance);
    partial void InsertTicket_Category(Ticket_Category instance);
    partial void UpdateTicket_Category(Ticket_Category instance);
    partial void DeleteTicket_Category(Ticket_Category instance);
    partial void InsertTicket_Organizer(Ticket_Organizer instance);
    partial void UpdateTicket_Organizer(Ticket_Organizer instance);
    partial void DeleteTicket_Organizer(Ticket_Organizer instance);
    partial void InsertLogInOut(LogInOut instance);
    partial void UpdateLogInOut(LogInOut instance);
    partial void DeleteLogInOut(LogInOut instance);
    partial void InsertTicket_Basic(Ticket_Basic instance);
    partial void UpdateTicket_Basic(Ticket_Basic instance);
    partial void DeleteTicket_Basic(Ticket_Basic instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertDonationReg_List(DonationReg_List instance);
    partial void UpdateDonationReg_List(DonationReg_List instance);
    partial void DeleteDonationReg_List(DonationReg_List instance);
    partial void InsertDonator_p(Donator_p instance);
    partial void UpdateDonator_p(Donator_p instance);
    partial void DeleteDonator_p(Donator_p instance);
    partial void InsertcompanyReg(companyReg instance);
    partial void UpdatecompanyReg(companyReg instance);
    partial void DeletecompanyReg(companyReg instance);

		internal int UpdatePrimaryKey(string sourceEntity, string oldValue, string newValue)
		{
			throw new NotImplementedException();
		}
		#endregion

		public DBDataContext() : 
				base(global::DAL.Properties.Settings.Default.DigitalTicketsConnectionString3, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AuditColumn> AuditColumns
		{
			get
			{
				return this.GetTable<AuditColumn>();
			}
		}
		
		public System.Data.Linq.Table<AuditLog> AuditLogs
		{
			get
			{
				return this.GetTable<AuditLog>();
			}
		}
		
		public System.Data.Linq.Table<AuditLogDetail> AuditLogDetails
		{
			get
			{
				return this.GetTable<AuditLogDetail>();
			}
		}
		
		public System.Data.Linq.Table<AuditTable> AuditTables
		{
			get
			{
				return this.GetTable<AuditTable>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<BusPeriod> BusPeriods
		{
			get
			{
				return this.GetTable<BusPeriod>();
			}
		}
		
		public System.Data.Linq.Table<District> Districts
		{
			get
			{
				return this.GetTable<District>();
			}
		}
		
		public System.Data.Linq.Table<EntCapability> EntCapabilities
		{
			get
			{
				return this.GetTable<EntCapability>();
			}
		}
		
		public System.Data.Linq.Table<EntMenuItem> EntMenuItems
		{
			get
			{
				return this.GetTable<EntMenuItem>();
			}
		}
		
		public System.Data.Linq.Table<EntPasswordHistory> EntPasswordHistories
		{
			get
			{
				return this.GetTable<EntPasswordHistory>();
			}
		}
		
		public System.Data.Linq.Table<EntRole> EntRoles
		{
			get
			{
				return this.GetTable<EntRole>();
			}
		}
		
		public System.Data.Linq.Table<EntRoleCapability> EntRoleCapabilities
		{
			get
			{
				return this.GetTable<EntRoleCapability>();
			}
		}
		
		public System.Data.Linq.Table<EntRoleUserAccount> EntRoleUserAccounts
		{
			get
			{
				return this.GetTable<EntRoleUserAccount>();
			}
		}
		
		public System.Data.Linq.Table<EntUserAccount> EntUserAccounts
		{
			get
			{
				return this.GetTable<EntUserAccount>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<SysPar> SysPars
		{
			get
			{
				return this.GetTable<SysPar>();
			}
		}
		
		public System.Data.Linq.Table<SysSecurityParm> SysSecurityParms
		{
			get
			{
				return this.GetTable<SysSecurityParm>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Category> Ticket_Categories
		{
			get
			{
				return this.GetTable<Ticket_Category>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Organizer> Ticket_Organizers
		{
			get
			{
				return this.GetTable<Ticket_Organizer>();
			}
		}
		
		public System.Data.Linq.Table<LogInOut> LogInOuts
		{
			get
			{
				return this.GetTable<LogInOut>();
			}
		}
		
		public System.Data.Linq.Table<Ticket_Basic> Ticket_Basics
		{
			get
			{
				return this.GetTable<Ticket_Basic>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Donationmade> Donationmades
		{
			get
			{
				return this.GetTable<Donationmade>();
			}
		}
		
		public System.Data.Linq.Table<DonationReg_List> DonationReg_Lists
		{
			get
			{
				return this.GetTable<DonationReg_List>();
			}
		}
		
		public System.Data.Linq.Table<Donator_p> Donator_ps
		{
			get
			{
				return this.GetTable<Donator_p>();
			}
		}
		
		public System.Data.Linq.Table<companyReg> companyRegs
		{
			get
			{
				return this.GetTable<companyReg>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditColumns")]
	public partial class AuditColumn
	{
		
		private long _ColumnID;
		
		private long _TableID;
		
		private string _ColumnName;
		
		public AuditColumn()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="BigInt NOT NULL")]
		public long ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this._ColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this._ColumnName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLog")]
	public partial class AuditLog
	{
		
		private long _AuditLogID;
		
		private long _TableID;
		
		private bool _RowsAffected;
		
		private char _Event;
		
		private System.DateTime _EventDateTime;
		
		private string _UserName;
		
		public AuditLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogID", DbType="BigInt NOT NULL")]
		public long AuditLogID
		{
			get
			{
				return this._AuditLogID;
			}
			set
			{
				if ((this._AuditLogID != value))
				{
					this._AuditLogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowsAffected", DbType="Bit NOT NULL")]
		public bool RowsAffected
		{
			get
			{
				return this._RowsAffected;
			}
			set
			{
				if ((this._RowsAffected != value))
				{
					this._RowsAffected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="Char(1) NOT NULL")]
		public char Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this._Event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this._EventDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditLogDetail")]
	public partial class AuditLogDetail
	{
		
		private long _AuditLogDetailID;
		
		private long _AuditLogID;
		
		private string _RowKey;
		
		private long _ColumnID;
		
		private string _OldValue;
		
		private string _NewValue;
		
		public AuditLogDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogDetailID", DbType="BigInt NOT NULL")]
		public long AuditLogDetailID
		{
			get
			{
				return this._AuditLogDetailID;
			}
			set
			{
				if ((this._AuditLogDetailID != value))
				{
					this._AuditLogDetailID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditLogID", DbType="BigInt NOT NULL")]
		public long AuditLogID
		{
			get
			{
				return this._AuditLogID;
			}
			set
			{
				if ((this._AuditLogID != value))
				{
					this._AuditLogID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowKey", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string RowKey
		{
			get
			{
				return this._RowKey;
			}
			set
			{
				if ((this._RowKey != value))
				{
					this._RowKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnID", DbType="BigInt NOT NULL")]
		public long ColumnID
		{
			get
			{
				return this._ColumnID;
			}
			set
			{
				if ((this._ColumnID != value))
				{
					this._ColumnID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="VarChar(4000)")]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this._OldValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="VarChar(4000)")]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this._NewValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditTables")]
	public partial class AuditTable
	{
		
		private long _TableID;
		
		private string _TableName;
		
		private string _Description;
		
		private string _PKeyField;
		
		private bool _AuditInserts;
		
		private bool _AuditUpdates;
		
		private bool _AuditDeletes;
		
		private string _UserColumn;
		
		public AuditTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableID", DbType="BigInt NOT NULL")]
		public long TableID
		{
			get
			{
				return this._TableID;
			}
			set
			{
				if ((this._TableID != value))
				{
					this._TableID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this._TableName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PKeyField", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PKeyField
		{
			get
			{
				return this._PKeyField;
			}
			set
			{
				if ((this._PKeyField != value))
				{
					this._PKeyField = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditInserts", DbType="Bit NOT NULL")]
		public bool AuditInserts
		{
			get
			{
				return this._AuditInserts;
			}
			set
			{
				if ((this._AuditInserts != value))
				{
					this._AuditInserts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditUpdates", DbType="Bit NOT NULL")]
		public bool AuditUpdates
		{
			get
			{
				return this._AuditUpdates;
			}
			set
			{
				if ((this._AuditUpdates != value))
				{
					this._AuditUpdates = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditDeletes", DbType="Bit NOT NULL")]
		public bool AuditDeletes
		{
			get
			{
				return this._AuditDeletes;
			}
			set
			{
				if ((this._AuditDeletes != value))
				{
					this._AuditDeletes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserColumn", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserColumn
		{
			get
			{
				return this._UserColumn;
			}
			set
			{
				if ((this._UserColumn != value))
				{
					this._UserColumn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private System.Nullable<long> _DistrictID;
		
		private string _T24Code;
		
		private string _Address;
		
		private string _Contact;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDistrictIDChanging(System.Nullable<long> value);
    partial void OnDistrictIDChanged();
    partial void OnT24CodeChanging(string value);
    partial void OnT24CodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistrictID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> DistrictID
		{
			get
			{
				return this._DistrictID;
			}
			set
			{
				if ((this._DistrictID != value))
				{
					this.OnDistrictIDChanging(value);
					this.SendPropertyChanging();
					this._DistrictID = value;
					this.SendPropertyChanged("DistrictID");
					this.OnDistrictIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T24Code", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string T24Code
		{
			get
			{
				return this._T24Code;
			}
			set
			{
				if ((this._T24Code != value))
				{
					this.OnT24CodeChanging(value);
					this.SendPropertyChanging();
					this._T24Code = value;
					this.SendPropertyChanged("T24Code");
					this.OnT24CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BusPeriod")]
	public partial class BusPeriod
	{
		
		private long _RowId;
		
		private string _BusinessPeriod;
		
		private byte _PStatus;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public BusPeriod()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowId", DbType="BigInt NOT NULL")]
		public long RowId
		{
			get
			{
				return this._RowId;
			}
			set
			{
				if ((this._RowId != value))
				{
					this._RowId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessPeriod", DbType="Char(9) NOT NULL", CanBeNull=false)]
		public string BusinessPeriod
		{
			get
			{
				return this._BusinessPeriod;
			}
			set
			{
				if ((this._BusinessPeriod != value))
				{
					this._BusinessPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PStatus", DbType="TinyInt NOT NULL")]
		public byte PStatus
		{
			get
			{
				return this._PStatus;
			}
			set
			{
				if ((this._PStatus != value))
				{
					this._PStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Binary(8)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.District")]
	public partial class District : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Contact;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public District()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntCapability")]
	public partial class EntCapability
	{
		
		private long _CapabilityId;
		
		private string _CapabilityName;
		
		private long _MenuItemId;
		
		private byte _AccessType;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public EntCapability()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CapabilityId
		{
			get
			{
				return this._CapabilityId;
			}
			set
			{
				if ((this._CapabilityId != value))
				{
					this._CapabilityId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CapabilityName
		{
			get
			{
				return this._CapabilityName;
			}
			set
			{
				if ((this._CapabilityName != value))
				{
					this._CapabilityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this._MenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessType", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte AccessType
		{
			get
			{
				return this._AccessType;
			}
			set
			{
				if ((this._AccessType != value))
				{
					this._AccessType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntMenuItem")]
	public partial class EntMenuItem
	{
		
		private long _MenuItemId;
		
		private string _MenuItemName;
		
		private string _Description;
		
		private string _URL;
		
		private System.Nullable<long> _ParentMenuItemId;
		
		private byte _DisplaySequence;
		
		private bool _IsAlwaysEnabled;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public EntMenuItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemId", DbType="BigInt NOT NULL")]
		public long MenuItemId
		{
			get
			{
				return this._MenuItemId;
			}
			set
			{
				if ((this._MenuItemId != value))
				{
					this._MenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuItemName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MenuItemName
		{
			get
			{
				return this._MenuItemName;
			}
			set
			{
				if ((this._MenuItemName != value))
				{
					this._MenuItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(250)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="VarChar(250)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this._URL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMenuItemId", DbType="BigInt")]
		public System.Nullable<long> ParentMenuItemId
		{
			get
			{
				return this._ParentMenuItemId;
			}
			set
			{
				if ((this._ParentMenuItemId != value))
				{
					this._ParentMenuItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplaySequence", DbType="TinyInt NOT NULL")]
		public byte DisplaySequence
		{
			get
			{
				return this._DisplaySequence;
			}
			set
			{
				if ((this._DisplaySequence != value))
				{
					this._DisplaySequence = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAlwaysEnabled", DbType="Bit NOT NULL")]
		public bool IsAlwaysEnabled
		{
			get
			{
				return this._IsAlwaysEnabled;
			}
			set
			{
				if ((this._IsAlwaysEnabled != value))
				{
					this._IsAlwaysEnabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Binary(8)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntPasswordHistory")]
	public partial class EntPasswordHistory
	{
		
		private long _Id;
		
		private string _UserAccountName;
		
		private string _Password;
		
		private string _AppName;
		
		private string _InsertUserId;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public EntPasswordHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserAccountName
		{
			get
			{
				return this._UserAccountName;
			}
			set
			{
				if ((this._UserAccountName != value))
				{
					this._UserAccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string AppName
		{
			get
			{
				return this._AppName;
			}
			set
			{
				if ((this._AppName != value))
				{
					this._AppName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL")]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Binary(8)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRole")]
	public partial class EntRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleId;
		
		private string _RoleName;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRoleCapability")]
	public partial class EntRoleCapability : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleCapabilityId;
		
		private long _RoleId;
		
		private long _CapabilityId;
		
		private byte _AccessFlag;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleCapabilityIdChanging(long value);
    partial void OnRoleCapabilityIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnCapabilityIdChanging(long value);
    partial void OnCapabilityIdChanged();
    partial void OnAccessFlagChanging(byte value);
    partial void OnAccessFlagChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRoleCapability()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleCapabilityId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleCapabilityId
		{
			get
			{
				return this._RoleCapabilityId;
			}
			set
			{
				if ((this._RoleCapabilityId != value))
				{
					this.OnRoleCapabilityIdChanging(value);
					this.SendPropertyChanging();
					this._RoleCapabilityId = value;
					this.SendPropertyChanged("RoleCapabilityId");
					this.OnRoleCapabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapabilityId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long CapabilityId
		{
			get
			{
				return this._CapabilityId;
			}
			set
			{
				if ((this._CapabilityId != value))
				{
					this.OnCapabilityIdChanging(value);
					this.SendPropertyChanging();
					this._CapabilityId = value;
					this.SendPropertyChanged("CapabilityId");
					this.OnCapabilityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFlag", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte AccessFlag
		{
			get
			{
				return this._AccessFlag;
			}
			set
			{
				if ((this._AccessFlag != value))
				{
					this.OnAccessFlagChanging(value);
					this.SendPropertyChanging();
					this._AccessFlag = value;
					this.SendPropertyChanged("AccessFlag");
					this.OnAccessFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntRoleUserAccount")]
	public partial class EntRoleUserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _RoleUserAccountId;
		
		private long _RoleId;
		
		private long _UserAccountId;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleUserAccountIdChanging(long value);
    partial void OnRoleUserAccountIdChanged();
    partial void OnRoleIdChanging(long value);
    partial void OnRoleIdChanged();
    partial void OnUserAccountIdChanging(long value);
    partial void OnUserAccountIdChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntRoleUserAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleUserAccountId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long RoleUserAccountId
		{
			get
			{
				return this._RoleUserAccountId;
			}
			set
			{
				if ((this._RoleUserAccountId != value))
				{
					this.OnRoleUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._RoleUserAccountId = value;
					this.SendPropertyChanged("RoleUserAccountId");
					this.OnRoleUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntUserAccount")]
	public partial class EntUserAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserAccountId;
		
		private string _UserAccountName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Position;
		
		private string _Department;
		
		private string _Email;
		
		private string _BranchID;
		
		private bool _IsActive;
		
		private string _UserPassword;
		
		private System.DateTime _PWDChangeDate;
		
		private bool _IsNewPassword;
		
		private bool _IsLocked;
		
		private byte _PAsswordAttemptNo;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserAccountIdChanging(long value);
    partial void OnUserAccountIdChanged();
    partial void OnUserAccountNameChanging(string value);
    partial void OnUserAccountNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnPWDChangeDateChanging(System.DateTime value);
    partial void OnPWDChangeDateChanged();
    partial void OnIsNewPasswordChanging(bool value);
    partial void OnIsNewPasswordChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnPAsswordAttemptNoChanging(byte value);
    partial void OnPAsswordAttemptNoChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public EntUserAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long UserAccountId
		{
			get
			{
				return this._UserAccountId;
			}
			set
			{
				if ((this._UserAccountId != value))
				{
					this.OnUserAccountIdChanging(value);
					this.SendPropertyChanging();
					this._UserAccountId = value;
					this.SendPropertyChanged("UserAccountId");
					this.OnUserAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAccountName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserAccountName
		{
			get
			{
				return this._UserAccountName;
			}
			set
			{
				if ((this._UserAccountName != value))
				{
					this.OnUserAccountNameChanging(value);
					this.SendPropertyChanging();
					this._UserAccountName = value;
					this.SendPropertyChanged("UserAccountName");
					this.OnUserAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PWDChangeDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime PWDChangeDate
		{
			get
			{
				return this._PWDChangeDate;
			}
			set
			{
				if ((this._PWDChangeDate != value))
				{
					this.OnPWDChangeDateChanging(value);
					this.SendPropertyChanging();
					this._PWDChangeDate = value;
					this.SendPropertyChanged("PWDChangeDate");
					this.OnPWDChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewPassword", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsNewPassword
		{
			get
			{
				return this._IsNewPassword;
			}
			set
			{
				if ((this._IsNewPassword != value))
				{
					this.OnIsNewPasswordChanging(value);
					this.SendPropertyChanging();
					this._IsNewPassword = value;
					this.SendPropertyChanged("IsNewPassword");
					this.OnIsNewPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAsswordAttemptNo", DbType="TinyInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public byte PAsswordAttemptNo
		{
			get
			{
				return this._PAsswordAttemptNo;
			}
			set
			{
				if ((this._PAsswordAttemptNo != value))
				{
					this.OnPAsswordAttemptNoChanging(value);
					this.SendPropertyChanging();
					this._PAsswordAttemptNo = value;
					this.SendPropertyChanged("PAsswordAttemptNo");
					this.OnPAsswordAttemptNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holiday")]
	public partial class Holiday
	{
		
		private long _Id;
		
		private string _HolidayName;
		
		private System.DateTime _HolidayDate;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public Holiday()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayName", DbType="VarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HolidayName
		{
			get
			{
				return this._HolidayName;
			}
			set
			{
				if ((this._HolidayName != value))
				{
					this._HolidayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this._HolidayDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysPar")]
	public partial class SysPar
	{
		
		private byte _GLCodeLen;
		
		private byte _SLCodeLen;
		
		private byte _MinPWDLen;
		
		private byte _MinLoginIdLen;
		
		private decimal _TotalCapital;
		
		public SysPar()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GLCodeLen", DbType="TinyInt NOT NULL")]
		public byte GLCodeLen
		{
			get
			{
				return this._GLCodeLen;
			}
			set
			{
				if ((this._GLCodeLen != value))
				{
					this._GLCodeLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLCodeLen", DbType="TinyInt NOT NULL")]
		public byte SLCodeLen
		{
			get
			{
				return this._SLCodeLen;
			}
			set
			{
				if ((this._SLCodeLen != value))
				{
					this._SLCodeLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPWDLen", DbType="TinyInt NOT NULL")]
		public byte MinPWDLen
		{
			get
			{
				return this._MinPWDLen;
			}
			set
			{
				if ((this._MinPWDLen != value))
				{
					this._MinPWDLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLoginIdLen", DbType="TinyInt NOT NULL")]
		public byte MinLoginIdLen
		{
			get
			{
				return this._MinLoginIdLen;
			}
			set
			{
				if ((this._MinLoginIdLen != value))
				{
					this._MinLoginIdLen = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCapital", DbType="Money NOT NULL")]
		public decimal TotalCapital
		{
			get
			{
				return this._TotalCapital;
			}
			set
			{
				if ((this._TotalCapital != value))
				{
					this._TotalCapital = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysSecurityParm")]
	public partial class SysSecurityParm
	{
		
		private byte _LoginIdMinLength;
		
		private byte _PasswordMinLength;
		
		private bool _PasswordMustHaveDigit;
		
		private bool _PasswordMustHaveLowerCase;
		
		private bool _PasswordMustHaveUpperCase;
		
		private bool _PasswordMustHaveSpecialChar;
		
		private byte _AllowedUnsuccessfulAttempts;
		
		private byte _PasswordInterval;
		
		private byte _PasswordHistory;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		public SysSecurityParm()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginIdMinLength", DbType="TinyInt NOT NULL")]
		public byte LoginIdMinLength
		{
			get
			{
				return this._LoginIdMinLength;
			}
			set
			{
				if ((this._LoginIdMinLength != value))
				{
					this._LoginIdMinLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMinLength", DbType="TinyInt NOT NULL")]
		public byte PasswordMinLength
		{
			get
			{
				return this._PasswordMinLength;
			}
			set
			{
				if ((this._PasswordMinLength != value))
				{
					this._PasswordMinLength = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveDigit", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveDigit
		{
			get
			{
				return this._PasswordMustHaveDigit;
			}
			set
			{
				if ((this._PasswordMustHaveDigit != value))
				{
					this._PasswordMustHaveDigit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveLowerCase", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveLowerCase
		{
			get
			{
				return this._PasswordMustHaveLowerCase;
			}
			set
			{
				if ((this._PasswordMustHaveLowerCase != value))
				{
					this._PasswordMustHaveLowerCase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveUpperCase", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveUpperCase
		{
			get
			{
				return this._PasswordMustHaveUpperCase;
			}
			set
			{
				if ((this._PasswordMustHaveUpperCase != value))
				{
					this._PasswordMustHaveUpperCase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordMustHaveSpecialChar", DbType="Bit NOT NULL")]
		public bool PasswordMustHaveSpecialChar
		{
			get
			{
				return this._PasswordMustHaveSpecialChar;
			}
			set
			{
				if ((this._PasswordMustHaveSpecialChar != value))
				{
					this._PasswordMustHaveSpecialChar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedUnsuccessfulAttempts", DbType="TinyInt NOT NULL")]
		public byte AllowedUnsuccessfulAttempts
		{
			get
			{
				return this._AllowedUnsuccessfulAttempts;
			}
			set
			{
				if ((this._AllowedUnsuccessfulAttempts != value))
				{
					this._AllowedUnsuccessfulAttempts = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordInterval", DbType="TinyInt NOT NULL")]
		public byte PasswordInterval
		{
			get
			{
				return this._PasswordInterval;
			}
			set
			{
				if ((this._PasswordInterval != value))
				{
					this._PasswordInterval = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHistory", DbType="TinyInt NOT NULL")]
		public byte PasswordHistory
		{
			get
			{
				return this._PasswordHistory;
			}
			set
			{
				if ((this._PasswordHistory != value))
				{
					this._PasswordHistory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Category")]
	public partial class Ticket_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _CategoryName;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Ticket_Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Organizer")]
	public partial class Ticket_Organizer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Name;
		
		private string _TillNumber;
		
		private string _BusinessDetail;
		
		private string _ContactDetail;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTillNumberChanging(string value);
    partial void OnTillNumberChanged();
    partial void OnBusinessDetailChanging(string value);
    partial void OnBusinessDetailChanged();
    partial void OnContactDetailChanging(string value);
    partial void OnContactDetailChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Ticket_Organizer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TillNumber", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TillNumber
		{
			get
			{
				return this._TillNumber;
			}
			set
			{
				if ((this._TillNumber != value))
				{
					this.OnTillNumberChanging(value);
					this.SendPropertyChanging();
					this._TillNumber = value;
					this.SendPropertyChanged("TillNumber");
					this.OnTillNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessDetail", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string BusinessDetail
		{
			get
			{
				return this._BusinessDetail;
			}
			set
			{
				if ((this._BusinessDetail != value))
				{
					this.OnBusinessDetailChanging(value);
					this.SendPropertyChanging();
					this._BusinessDetail = value;
					this.SendPropertyChanged("BusinessDetail");
					this.OnBusinessDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactDetail", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string ContactDetail
		{
			get
			{
				return this._ContactDetail;
			}
			set
			{
				if ((this._ContactDetail != value))
				{
					this.OnContactDetailChanging(value);
					this.SendPropertyChanging();
					this._ContactDetail = value;
					this.SendPropertyChanged("ContactDetail");
					this.OnContactDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LogInOut")]
	public partial class LogInOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _UserID;
		
		private System.DateTime _LogInDT;
		
		private System.DateTime _LogOutDT;
		
		private char _Status;
		
		private string _UserHost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnLogInDTChanging(System.DateTime value);
    partial void OnLogInDTChanged();
    partial void OnLogOutDTChanging(System.DateTime value);
    partial void OnLogOutDTChanged();
    partial void OnStatusChanging(char value);
    partial void OnStatusChanged();
    partial void OnUserHostChanging(string value);
    partial void OnUserHostChanged();
    #endregion
		
		public LogInOut()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogInDT", DbType="DateTime NOT NULL")]
		public System.DateTime LogInDT
		{
			get
			{
				return this._LogInDT;
			}
			set
			{
				if ((this._LogInDT != value))
				{
					this.OnLogInDTChanging(value);
					this.SendPropertyChanging();
					this._LogInDT = value;
					this.SendPropertyChanged("LogInDT");
					this.OnLogInDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogOutDT", DbType="DateTime NOT NULL")]
		public System.DateTime LogOutDT
		{
			get
			{
				return this._LogOutDT;
			}
			set
			{
				if ((this._LogOutDT != value))
				{
					this.OnLogOutDTChanging(value);
					this.SendPropertyChanging();
					this._LogOutDT = value;
					this.SendPropertyChanged("LogOutDT");
					this.OnLogOutDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Char(1) NOT NULL")]
		public char Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserHost", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserHost
		{
			get
			{
				return this._UserHost;
			}
			set
			{
				if ((this._UserHost != value))
				{
					this.OnUserHostChanging(value);
					this.SendPropertyChanging();
					this._UserHost = value;
					this.SendPropertyChanged("UserHost");
					this.OnUserHostChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket_Basic")]
	public partial class Ticket_Basic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Title;
		
		private string _Poster;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private System.DateTime _ToDate;
		
		private System.Nullable<System.TimeSpan> _FromTime;
		
		private System.TimeSpan _ToTime;
		
		private System.Nullable<long> _OrganizerID;
		
		private System.Nullable<long> _SingleTicketingLimit;
		
		private string _Description;
		
		private string _Price;
		
		private string _Location;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPosterChanging(string value);
    partial void OnPosterChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnToDateChanging(System.DateTime value);
    partial void OnToDateChanged();
    partial void OnFromTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnFromTimeChanged();
    partial void OnToTimeChanging(System.TimeSpan value);
    partial void OnToTimeChanged();
    partial void OnOrganizerIDChanging(System.Nullable<long> value);
    partial void OnOrganizerIDChanged();
    partial void OnSingleTicketingLimitChanging(System.Nullable<long> value);
    partial void OnSingleTicketingLimitChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceChanging(string value);
    partial void OnPriceChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Ticket_Basic()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poster", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Poster
		{
			get
			{
				return this._Poster;
			}
			set
			{
				if ((this._Poster != value))
				{
					this.OnPosterChanging(value);
					this.SendPropertyChanging();
					this._Poster = value;
					this.SendPropertyChanged("Poster");
					this.OnPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDate", DbType="Date NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ToDate
		{
			get
			{
				return this._ToDate;
			}
			set
			{
				if ((this._ToDate != value))
				{
					this.OnToDateChanging(value);
					this.SendPropertyChanging();
					this._ToDate = value;
					this.SendPropertyChanged("ToDate");
					this.OnToDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromTime", DbType="Time", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.TimeSpan> FromTime
		{
			get
			{
				return this._FromTime;
			}
			set
			{
				if ((this._FromTime != value))
				{
					this.OnFromTimeChanging(value);
					this.SendPropertyChanging();
					this._FromTime = value;
					this.SendPropertyChanged("FromTime");
					this.OnFromTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToTime", DbType="Time NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.TimeSpan ToTime
		{
			get
			{
				return this._ToTime;
			}
			set
			{
				if ((this._ToTime != value))
				{
					this.OnToTimeChanging(value);
					this.SendPropertyChanging();
					this._ToTime = value;
					this.SendPropertyChanged("ToTime");
					this.OnToTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> OrganizerID
		{
			get
			{
				return this._OrganizerID;
			}
			set
			{
				if ((this._OrganizerID != value))
				{
					this.OnOrganizerIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizerID = value;
					this.SendPropertyChanged("OrganizerID");
					this.OnOrganizerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SingleTicketingLimit", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> SingleTicketingLimit
		{
			get
			{
				return this._SingleTicketingLimit;
			}
			set
			{
				if ((this._SingleTicketingLimit != value))
				{
					this.OnSingleTicketingLimitChanging(value);
					this.SendPropertyChanging();
					this._SingleTicketingLimit = value;
					this.SendPropertyChanged("SingleTicketingLimit");
					this.OnSingleTicketingLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="VarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="VarChar(500) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(150) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(250)", UpdateCheck=UpdateCheck.Never)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _Firstname;
		
		private string _Lastname;
		
		private string _Department;
		
		private string _Position;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnFirstnameChanging(string value);
    partial void OnFirstnameChanged();
    partial void OnLastnameChanging(string value);
    partial void OnLastnameChanged();
    partial void OnDepartmentChanging(string value);
    partial void OnDepartmentChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this.OnFirstnameChanging(value);
					this.SendPropertyChanging();
					this._Firstname = value;
					this.SendPropertyChanged("Firstname");
					this.OnFirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this.OnLastnameChanging(value);
					this.SendPropertyChanging();
					this._Lastname = value;
					this.SendPropertyChanged("Lastname");
					this.OnLastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this.OnDepartmentChanging(value);
					this.SendPropertyChanging();
					this._Department = value;
					this.SendPropertyChanged("Department");
					this.OnDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donationmade")]
	public partial class Donationmade
	{
		
		private long _Id;
		
		private System.Nullable<int> _DonationId;
		
		private string _CustomerPhone;
		
		private string _CustomerName;
		
		private string _DonationAmount;
		
		private System.Nullable<System.DateTime> _DonationDate;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
		public Donationmade()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationId", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> DonationId
		{
			get
			{
				return this._DonationId;
			}
			set
			{
				if ((this._DonationId != value))
				{
					this._DonationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this._CustomerPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this._CustomerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationAmount", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string DonationAmount
		{
			get
			{
				return this._DonationAmount;
			}
			set
			{
				if ((this._DonationAmount != value))
				{
					this._DonationAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DonationDate
		{
			get
			{
				return this._DonationDate;
			}
			set
			{
				if ((this._DonationDate != value))
				{
					this._DonationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this._InsertUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this._UpdateUserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this._EntryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonationReg_List")]
	public partial class DonationReg_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _companyid;
		
		private string _donationtitle;
		
		private string _donationdescription;
		
		private System.Nullable<int> _donationamountrequired;
		
		private System.Nullable<System.DateTime> _donationenddate;
		
		private System.Nullable<int> _specialshortcode;
		
		private string _donationrelatedlinks;
		
		private string _sms;
		
		private string _email;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncompanyidChanging(System.Nullable<long> value);
    partial void OncompanyidChanged();
    partial void OndonationtitleChanging(string value);
    partial void OndonationtitleChanged();
    partial void OndonationdescriptionChanging(string value);
    partial void OndonationdescriptionChanged();
    partial void OndonationamountrequiredChanging(System.Nullable<int> value);
    partial void OndonationamountrequiredChanged();
    partial void OndonationenddateChanging(System.Nullable<System.DateTime> value);
    partial void OndonationenddateChanged();
    partial void OnspecialshortcodeChanging(System.Nullable<int> value);
    partial void OnspecialshortcodeChanged();
    partial void OndonationrelatedlinksChanging(string value);
    partial void OndonationrelatedlinksChanged();
    partial void OnsmsChanging(string value);
    partial void OnsmsChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public DonationReg_List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyid", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> companyid
		{
			get
			{
				return this._companyid;
			}
			set
			{
				if ((this._companyid != value))
				{
					this.OncompanyidChanging(value);
					this.SendPropertyChanging();
					this._companyid = value;
					this.SendPropertyChanged("companyid");
					this.OncompanyidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationtitle", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string donationtitle
		{
			get
			{
				return this._donationtitle;
			}
			set
			{
				if ((this._donationtitle != value))
				{
					this.OndonationtitleChanging(value);
					this.SendPropertyChanging();
					this._donationtitle = value;
					this.SendPropertyChanged("donationtitle");
					this.OndonationtitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationdescription", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string donationdescription
		{
			get
			{
				return this._donationdescription;
			}
			set
			{
				if ((this._donationdescription != value))
				{
					this.OndonationdescriptionChanging(value);
					this.SendPropertyChanging();
					this._donationdescription = value;
					this.SendPropertyChanged("donationdescription");
					this.OndonationdescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationamountrequired", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> donationamountrequired
		{
			get
			{
				return this._donationamountrequired;
			}
			set
			{
				if ((this._donationamountrequired != value))
				{
					this.OndonationamountrequiredChanging(value);
					this.SendPropertyChanging();
					this._donationamountrequired = value;
					this.SendPropertyChanged("donationamountrequired");
					this.OndonationamountrequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationenddate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> donationenddate
		{
			get
			{
				return this._donationenddate;
			}
			set
			{
				if ((this._donationenddate != value))
				{
					this.OndonationenddateChanging(value);
					this.SendPropertyChanging();
					this._donationenddate = value;
					this.SendPropertyChanged("donationenddate");
					this.OndonationenddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialshortcode", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> specialshortcode
		{
			get
			{
				return this._specialshortcode;
			}
			set
			{
				if ((this._specialshortcode != value))
				{
					this.OnspecialshortcodeChanging(value);
					this.SendPropertyChanging();
					this._specialshortcode = value;
					this.SendPropertyChanged("specialshortcode");
					this.OnspecialshortcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donationrelatedlinks", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string donationrelatedlinks
		{
			get
			{
				return this._donationrelatedlinks;
			}
			set
			{
				if ((this._donationrelatedlinks != value))
				{
					this.OndonationrelatedlinksChanging(value);
					this.SendPropertyChanging();
					this._donationrelatedlinks = value;
					this.SendPropertyChanged("donationrelatedlinks");
					this.OndonationrelatedlinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sms", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string sms
		{
			get
			{
				return this._sms;
			}
			set
			{
				if ((this._sms != value))
				{
					this.OnsmsChanging(value);
					this.SendPropertyChanging();
					this._sms = value;
					this.SendPropertyChanged("sms");
					this.OnsmsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donator_p")]
	public partial class Donator_p : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Fullname;
		
		private string _CustomerPhone;
		
		private string _RecursiveDonations;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnCustomerPhoneChanging(string value);
    partial void OnCustomerPhoneChanged();
    partial void OnRecursiveDonationsChanging(string value);
    partial void OnRecursiveDonationsChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public Donator_p()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerPhone", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string CustomerPhone
		{
			get
			{
				return this._CustomerPhone;
			}
			set
			{
				if ((this._CustomerPhone != value))
				{
					this.OnCustomerPhoneChanging(value);
					this.SendPropertyChanging();
					this._CustomerPhone = value;
					this.SendPropertyChanged("CustomerPhone");
					this.OnCustomerPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecursiveDonations", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string RecursiveDonations
		{
			get
			{
				return this._RecursiveDonations;
			}
			set
			{
				if ((this._RecursiveDonations != value))
				{
					this.OnRecursiveDonationsChanging(value);
					this.SendPropertyChanging();
					this._RecursiveDonations = value;
					this.SendPropertyChanged("RecursiveDonations");
					this.OnRecursiveDonationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.companyReg")]
	public partial class companyReg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _companyname;
		
		private string _companydescription;
		
		private string _location;
		
		private string _phone;
		
		private string _pobox;
		
		private string _generalmanager;
		
		private string _tillnumber;
		
		private System.Nullable<System.DateTime> _formationDate;
		
		private string _InsertUserId;
		
		private string _UpdateUserId;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _EntryDate;
		
		private System.Data.Linq.Binary _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void OncompanydescriptionChanging(string value);
    partial void OncompanydescriptionChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpoboxChanging(string value);
    partial void OnpoboxChanged();
    partial void OngeneralmanagerChanging(string value);
    partial void OngeneralmanagerChanged();
    partial void OntillnumberChanging(string value);
    partial void OntillnumberChanged();
    partial void OnformationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnformationDateChanged();
    partial void OnInsertUserIdChanging(string value);
    partial void OnInsertUserIdChanged();
    partial void OnUpdateUserIdChanging(string value);
    partial void OnUpdateUserIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnEntryDateChanging(System.DateTime value);
    partial void OnEntryDateChanged();
    partial void OnVersionChanging(System.Data.Linq.Binary value);
    partial void OnVersionChanged();
    #endregion
		
		public companyReg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyname", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string companyname
		{
			get
			{
				return this._companyname;
			}
			set
			{
				if ((this._companyname != value))
				{
					this.OncompanynameChanging(value);
					this.SendPropertyChanging();
					this._companyname = value;
					this.SendPropertyChanged("companyname");
					this.OncompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companydescription", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string companydescription
		{
			get
			{
				return this._companydescription;
			}
			set
			{
				if ((this._companydescription != value))
				{
					this.OncompanydescriptionChanging(value);
					this.SendPropertyChanging();
					this._companydescription = value;
					this.SendPropertyChanged("companydescription");
					this.OncompanydescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pobox", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string pobox
		{
			get
			{
				return this._pobox;
			}
			set
			{
				if ((this._pobox != value))
				{
					this.OnpoboxChanging(value);
					this.SendPropertyChanging();
					this._pobox = value;
					this.SendPropertyChanged("pobox");
					this.OnpoboxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generalmanager", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string generalmanager
		{
			get
			{
				return this._generalmanager;
			}
			set
			{
				if ((this._generalmanager != value))
				{
					this.OngeneralmanagerChanging(value);
					this.SendPropertyChanging();
					this._generalmanager = value;
					this.SendPropertyChanged("generalmanager");
					this.OngeneralmanagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tillnumber", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string tillnumber
		{
			get
			{
				return this._tillnumber;
			}
			set
			{
				if ((this._tillnumber != value))
				{
					this.OntillnumberChanging(value);
					this.SendPropertyChanging();
					this._tillnumber = value;
					this.SendPropertyChanged("tillnumber");
					this.OntillnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_formationDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> formationDate
		{
			get
			{
				return this._formationDate;
			}
			set
			{
				if ((this._formationDate != value))
				{
					this.OnformationDateChanging(value);
					this.SendPropertyChanging();
					this._formationDate = value;
					this.SendPropertyChanged("formationDate");
					this.OnformationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string InsertUserId
		{
			get
			{
				return this._InsertUserId;
			}
			set
			{
				if ((this._InsertUserId != value))
				{
					this.OnInsertUserIdChanging(value);
					this.SendPropertyChanging();
					this._InsertUserId = value;
					this.SendPropertyChanged("InsertUserId");
					this.OnInsertUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserId", DbType="VarChar(250) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string UpdateUserId
		{
			get
			{
				return this._UpdateUserId;
			}
			set
			{
				if ((this._UpdateUserId != value))
				{
					this.OnUpdateUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserId = value;
					this.SendPropertyChanged("UpdateUserId");
					this.OnUpdateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntryDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime EntryDate
		{
			get
			{
				return this._EntryDate;
			}
			set
			{
				if ((this._EntryDate != value))
				{
					this.OnEntryDateChanging(value);
					this.SendPropertyChanging();
					this._EntryDate = value;
					this.SendPropertyChanged("EntryDate");
					this.OnEntryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
